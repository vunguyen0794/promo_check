<%- include('partials/header', {title: 'Qu·∫£n l√Ω CTKM' , currentPage: 'promo-management' , time: time}) %>
<% var listCompat = [];
  try {
    if (typeof allPromosForCompat !== 'undefined' && Array.isArray(allPromosForCompat)) {
      listCompat = allPromosForCompat;
    }
  } catch (e) { listCompat = []; }
%>


        <style>
            .filterbar {
                display: flex;
                gap: 8px;
                align-items: center;
                margin: 10px 0 14px;
                flex-wrap: wrap
            }

            .filterbar select {
                height: 40px;
                padding: 0 10px;
                border: 1px solid #e5e7eb;
                border-radius: 10px;
                font-size: 15px
            }

            .filterbar button {
                height: 40px;
                padding: 0 14px;
                border: none;
                border-radius: 10px;
                background: #2563eb;
                color: #fff;
                font-weight: 600
            }

            .legacy-search {
                width: 100%;
                height: 44px;
                padding: 0 12px;
                border: 1px solid #e5e7eb;
                border-radius: 10px;
                font-size: 16px
            }

            @media (max-width:768px) {
                .filterbar select {
                    flex: 1;
                    min-width: 42%
                }
            }
        </style>

        <style>
            .filterbar {
                display: flex;
                gap: 10px;
                align-items: center;
                margin: 12px 0 18px
            }

            .filterbar input,
            .filterbar select {
                height: 36px;
                padding: 0 10px;
                border: 1px solid #e5e7eb;
                border-radius: 8px
            }

            .filterbar button {
                height: 36px;
                padding: 0 12px;
                border: none;
                border-radius: 8px;
                background: #2563eb;
                color: #fff
            }

            .filterbar a {
                font-size: 13px;
                color: #475569
            }
        </style>

        <style>
            .search-and-filter {
                position: relative;
                display: flex;
                gap: 10px;
                align-items: center;
                margin: 10px 0 14px
            }

            .search-and-filter .search-input {
                flex: 1 1 auto
            }

            .filter-toggle {
                flex: 0 0 auto;
                min-width: 44px;
                min-height: 44px;
                display: flex;
                align-items: center;
                justify-content: center;
                border-radius: 10px
            }

            .filter-popover {
                position: absolute;
                right: 0;
                top: calc(100% + 8px);
                width: min(420px, 92vw);
                background: #fff;
                border: 1px solid #e5e7eb;
                border-radius: 12px;
                padding: 12px;
                box-shadow: 0 12px 28px rgba(2, 6, 23, .14);
                display: none;
                z-index: 50;
            }

            .filter-popover.show {
                display: block
            }

            .filter-popover .popover-row {
                display: flex;
                gap: 10px;
                align-items: center;
                margin-bottom: 10px
            }

            .filter-popover .popover-row label {
                min-width: 90px;
                color: #475569;
                font-size: 14px
            }

            .filter-popover .info-select {
                flex: 1 1 auto;
                height: 40px;
                padding: 0 10px;
                border: 1px solid #e5e7eb;
                border-radius: 10px
            }

            .filter-popover .popover-actions {
                display: flex;
                gap: 10px;
                justify-content: flex-end;
                margin-top: 6px
            }

            @media (max-width: 768px) {
                .filter-popover {
                    right: 0;
                    left: 0;
                    margin: 0 auto
                }

                .filter-popover .popover-row {
                    flex-direction: column;
                    align-items: stretch
                }

                .filter-popover .popover-row label {
                    min-width: unset
                }
            }

            .modal {
                overflow-y: auto;
            }

            body.modal-open {
                overflow: hidden;
            }
        </style>



        <div class="promo-management">
            <h1 class="section-title">Qu·∫£n l√Ω Ch∆∞∆°ng tr√¨nh Khuy·∫øn m√£i</h1>

            <div class="action-buttons">
                <button class="btn btn-primary" onclick="showCreateModal()">+ T·∫°o CTKM m·ªõi</button>
            </div>
            <!-- Search + Filter (popover) -->
            <div class="search-and-filter">
                <!-- √î search C≈® c·ªßa b·∫°n: gi·ªØ class/style hi·ªán t·∫°i, ch·ªâ th√™m id n·∫øu ch∆∞a c√≥ -->
                <input id="promoSearch" class="search-input" type="text" placeholder="T√¨m ki·∫øm CTKM..."
                    value="<%= q || '' %>">

                <!-- N√∫t icon filter -->
                <button type="button" class="btn btn-primary filter-toggle" aria-expanded="false" title="B·ªô l·ªçc">
                    ‚öôÔ∏è
                </button>

                <!-- Popover l·ªçc (server-side) -->
                <form method="get" action="/promo-management" id="filterForm" class="filter-popover" aria-hidden="true">
                    <!-- nh·∫≠n gi√° tr·ªã q t·ª´ √¥ search -->
                    <input type="hidden" name="q" id="qHidden" value="<%= q %>">

                    <div class="popover-row">
                        <label>Nh√≥m</label>
                        <select name="group" id="groupSelect" class="info-select">
                            <option value="">-- Nh√≥m --</option>
                            <% (groups || []).forEach(g=> { %>
                                <option value="<%= g %>" <%=selectedGroup===g ? 'selected' : '' %>><%= g %>
                                </option>
                                <% }) %>
                        </select>
                    </div>

                    <div class="popover-row">
                        <label>Bi·∫øn th·ªÉ</label>
                        <select name="subgroup" id="subgroupSelect" class="info-select">
                            <option value="">-- Bi·∫øn th·ªÉ --</option>
                            <% (subgroups || []).forEach(sg=> { %>
                                <option value="<%= sg %>" <%=selectedSubgroup===sg ? 'selected' : '' %>><%= sg %>
                                </option>
                                <% }) %>
                        </select>
                    </div>

                    <div class="popover-actions">
                        <button type="submit" class="btn btn-primary">L·ªçc</button>
                        <a class="btn btn-secondary" href="/promo-management">X√≥a l·ªçc</a>
                    </div>
                </form>
            </div>



            <div class="promo-list">
                <% if (promotions && promotions.length> 0) { %>
                    <% promotions.forEach(promo=> { %>
                        <div class="promo-card" data-name="<%= promo.name.toLowerCase() %>">
                            <h3>
                                <%= promo.name %>
                            </h3>
                            <% if (promo.group_name || promo.subgroup_name) { %>
                                <div class="group-badges">
                                    <% if (promo.group_name) { %>
                                        <span class="badge badge-group">
                                            <%= promo.group_name %>
                                        </span>
                                        <% } %>

                                </div>
                                <% } %>
                                    <p><strong>üìÖ Th·ªùi gian:</strong>
                                        <%= new Date(promo.start_date).toLocaleDateString('vi-VN') %> - <%= new
                                                Date(promo.end_date).toLocaleDateString('vi-VN') %>
                                    </p>
                                    <p><strong>üéØ Lo·∫°i:</strong>
                                        <%= promo.promo_type %>
                                    </p>
                                    <p><strong>üîÑ Channel:</strong>
                                        <%= promo.channel %>
                                    </p>
                                    <p><strong>üìä Tr·∫°ng th√°i:</strong>
                                        <span
                                            class="status-badge <%= new Date(promo.end_date) > new Date() ? 'active' : 'expired' %>">
                                            <%= new Date(promo.end_date)> new Date() ? 'üü¢ ƒêang ho·∫°t ƒë·ªông' : 'üî¥ ƒê√£ h·∫øt h·∫°n'
                                                %>
                                        </span>
                                    </p>
                                    <div class="promo-actions">
                                        <a href="/promotion-detail/<%= promo.id %>" class="btn btn-info">üëÅÔ∏è Xem chi
                                            ti·∫øt</a>
                                        <% if (user && user.role==='manager' ) { %>
                                            <button class="btn btn-warning" onclick="editPromo(<%= promo.id %>)">‚úèÔ∏è
                                                S·ª≠a</button>
                                            <button class="btn btn-danger" onclick="deletePromo(<%= promo.id %>)">üóëÔ∏è
                                                X√≥a</button>
                                            <% } %>
                                    </div>
                        </div>

                        <% }); %>
                            <% } else { %>
                                <div class="no-data">
                                    <p>üì≠ Ch∆∞a c√≥ CTKM n√†o ƒë∆∞·ª£c t·∫°o</p>
                                    <p>H√£y b·∫•m "T·∫°o CTKM m·ªõi" ƒë·ªÉ b·∫Øt ƒë·∫ßu</p>
                                </div>
                                <% } %>
            </div>
        </div>

        <!-- Modal t·∫°o CTKM -->
        <div id="createPromoModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeModal()">&times;</span>
                <h2>üéØ T·∫°o CTKM m·ªõi</h2>

                <form id="promoForm" class="promo-form">
                    <div class="form-section">
                        <h3>üìã Th√¥ng tin c∆° b·∫£n</h3>
                        <div class="form-group">
                            <label>T√™n CTKM *</label>
                            <input type="text" name="name" required placeholder="Nh·∫≠p t√™n ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i">
                        </div>
                        <div class="form-group">
                            <label>M√¥ t·∫£</label>
                            <textarea name="description" placeholder="M√¥ t·∫£ ng·∫Øn v·ªÅ CTKM"></textarea>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label>üìÖ Ng√†y b·∫Øt ƒë·∫ßu *</label>
                                <input type="date" name="start_date" required>
                            </div>
                            <div class="form-group">
                                <label>üìÖ Ng√†y k·∫øt th√∫c *</label>
                                <input type="date" name="end_date" required>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group">
                                <label>üîÑ Channel √°p d·ª•ng</label>
                                <select name="channel">
                                    <option value="All">T·∫•t c·∫£</option>
                                    <option value="Online">Online</option>
                                    <option value="Offline">Offline</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>üéÅ Lo·∫°i CTKM *</label>
                                <select name="promo_type" required onchange="togglePromoFields()">
                                    <option value="">Ch·ªçn lo·∫°i CTKM</option>
                                    <option value="Kh√¥ng c√≥ m√£">Kh√¥ng c√≥ m√£</option>
                                    <option value="Coupon">Coupon</option>
                                    <option value="Voucher">Voucher</option>
                                    <option value="∆Øu ƒë√£i thanh to√°n">∆Øu ƒë√£i thanh to√°n</option>
                                    <option value="Gift">Qu√† t·∫∑ng (Gift)</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group" id="couponField" style="display: none;">
                            <label>üîë M√£ gi·∫£m gi√°</label>
                            <input type="text" name="coupon_code" placeholder="Nh·∫≠p m√£ coupon">
                        </div>
                    </div>

                    <div class="form-group">
  <label>Gi√° tr·ªã gi·∫£m</label>
  <div class="grid-2">
    <div>
      <select name="discount_value_type" id="discount_value_type" onchange="toggleDiscountInputs()">
        <option value="">-- Ch·ªçn ki·ªÉu --</option>
        <option value="amount">Gi·∫£m ti·ªÅn (‚Ç´)</option>
        <option value="percent">Gi·∫£m theo %</option>
      </select>
    </div>
    <div id="amountBox" style="display:none;">
      <input type="number" name="discount_amount" placeholder="S·ªë ti·ªÅn gi·∫£m (‚Ç´)" min="0" step="1000">
    </div>
    <div id="percentBox" style="display:none;">
      <input type="number" name="discount_percent" placeholder="% gi·∫£m (0‚Äì100)" min="0" max="100" step="0.1">
    </div>
    <div id="capBox" style="display:none;">
      <input type="number" name="max_discount_amount" placeholder="Gi·∫£m t·ªëi ƒëa (‚Ç´)" min="0" step="1000">
    </div>
    <div>
      <input type="number" name="min_order_value" placeholder="ƒê∆°n t·ªëi thi·ªÉu (‚Ç´, ƒë·ªÉ tr·ªëng = 0)" min="0" step="1000">
    </div>
  </div>
  <small class="hint">Ch·ªçn ‚ÄúGi·∫£m ti·ªÅn‚Äù ‚Üí nh·∫≠p ‚ÄúS·ªë ti·ªÅn gi·∫£m‚Äù. Ch·ªçn ‚Äú%‚Äù ‚Üí nh·∫≠p ‚Äú% gi·∫£m‚Äù + ‚ÄúGi·∫£m t·ªëi ƒëa‚Äù.</small>
</div>

<script>
  function toggleDiscountInputs(){
    const t = document.getElementById('discount_value_type').value;
    document.getElementById('amountBox').style.display  = (t==='amount') ? 'block' : 'none';
    document.getElementById('percentBox').style.display = (t==='percent') ? 'block' : 'none';
    document.getElementById('capBox').style.display     = (t==='percent') ? 'block' : 'none';
  }
  document.addEventListener('DOMContentLoaded', toggleDiscountInputs);
</script>

<style>
  .grid-2{ display:grid; grid-template-columns: repeat(auto-fit,minmax(220px,1fr)); gap:10px; }
  .hint{ color:#64748b; font-size:12px; }
</style>



                    <h3>üß© Nh√≥m hi·ªÉn th·ªã</h3>
                    <div class="grid-2">
                        <div class="form-group">
                            <label>Nh√≥m CTKM (v√≠ d·ª•: ƒê·ªîI ƒêI·ªÇM THI)</label>
                            <input name="group_name" placeholder="Nh·∫≠p nh√≥m (theo h√†ng ƒë·∫ßu c·ªßa file Excel)">
                        </div>
                        <div class="form-group">
                            <label>Nh√°nh/Bi·∫øn th·ªÉ (v√≠ d·ª•: ƒê·ªïi ƒëi·ªÉm Laptop)</label>
                            <input type="hidden" name="subgroup_name" id="subgroup_name_hidden">
                        </div>
                    </div>

                    <h3>üìã B·∫£ng chi ti·∫øt (ch·ªâ ƒë·ªÉ hi·ªÉn th·ªã)</h3>

                    <style>
                        .rte-toolbar {
                            display: flex;
                            gap: 6px;
                            flex-wrap: wrap;
                            margin: 6px 0 10px;
                            align-items: center;
                        }

                        .rte-btn {
                            padding: 6px 10px;
                            border: 1px solid #e5e7eb;
                            background: #fff;
                            border-radius: 8px;
                            font-size: 12px;
                            cursor: pointer;
                        }

                        .rte-color {
                            width: 26px;
                            height: 26px;
                            padding: 0;
                        }

                        .detail-grid {
                            width: 100%;
                            border: 1px solid #e5e7eb;
                            border-radius: 12px;
                            border-collapse: separate;
                            border-spacing: 0;
                            table-layout: fixed;
                        }

                        .detail-grid colgroup col:first-child {
                            width: 34%;
                        }

                        /* ti√™u ƒë·ªÅ */
                        .detail-grid colgroup col:last-child {
                            width: 66%;
                        }

                        /* √¥ nh·∫≠p */
                        .detail-grid th,
                        .detail-grid td {
                            padding: 10px 12px;
                            border-bottom: 1px solid #eef2f7;
                            vertical-align: top;
                        }

                        .detail-grid th {
                            background: #f8fafc;
                            font-weight: 600;
                            color: #0f172a;
                            text-align: left;
                        }

                        .detail-grid tr:last-child th,
                        .detail-grid tr:last-child td {
                            border-bottom: none;
                        }

                        .rte-field {
                            display: block;
                            width: 100%;
                            min-height: 90px;
                            padding: 10px;
                            border: 1px solid #e5e7eb;
                            border-radius: 10px;
                            background: #fff;
                            overflow: auto;
                        }

                        .rte-field:focus {
                            outline: 2px solid #93c5fd;
                            outline-offset: 2px;
                        }

                        .rte-field:empty:before {
                            content: attr(data-placeholder);
                            color: #94a3b8;
                        }

                        textarea[hidden] {
                            display: none !important;
                        }

                        @media (max-width: 768px) {
                            .detail-grid colgroup col:first-child {
                                width: 42%;
                            }

                            .detail-grid colgroup col:last-child {
                                width: 58%;
                            }

                            .rte-field {
                                min-height: 72px;
                            }
                        }
                    </style>


                    <div class="rte-toolbar" id="rteToolbar" aria-label="ƒê·ªãnh d·∫°ng">
                        <button type="button" class="rte-btn" data-cmd="bold"><b>B</b></button>
                        <button type="button" class="rte-btn" data-cmd="italic"><i>I</i></button>
                        <button type="button" class="rte-btn" data-cmd="underline"><u>U</u></button>
                        <input type="color" class="rte-btn rte-color" id="rteColor">
                        <button type="button" class="rte-btn" id="rteEmoji">üòä</button>
                        <button type="button" class="rte-btn" id="rteLink">üîó Link</button>
                        <small class="muted">Ch·ªçn √¥ c·∫ßn nh·∫≠p, r·ªìi b·∫•m c√°c n√∫t ƒë·ªÉ ƒë·ªãnh d·∫°ng.</small>
                    </div>
                    <% // B·∫¢NG CHI TI·∫æT ‚Äì ƒë√£ b·ªè c√°c tr∆∞·ªùng tr√πng v·ªõi ‚ÄúTh√¥ng tin c∆° b·∫£n‚Äù const
                        DETAIL_ROWS=[ 'N·ªôi dung / Link b√°o c√°o/ Lu·ªìng v·∫≠n h√†nh' , 'ƒê·ªëi t∆∞·ª£ng lo·∫°i tr·ª´'
                        , 'ƒê·ªëi t∆∞·ª£ng √°p d·ª•ng' , 'Gi·ªõi h·∫°n l∆∞·ª£t √°p d·ª•ng' , 'Y√™u c·∫ßu ƒë·∫∑c bi·ªát' , 'Tr·∫£ tr∆∞·ªõc (Tr·∫£ g√≥p)'
                        , 'Gi√° tr·ªã gi·∫£m (% ho·∫∑c ti·ªÅn)' , 'Gi√° tr·ªã gi·∫£m t·ªëi ƒëa (N·∫øu l√† %)' , 'Gi√° tr·ªã t·ªëi thi·ªÉu'
                        , 'Gi·ªõi h·∫°n s·ªë l∆∞·ª£ng coupon' , 'SKU qu√† t·∫∑ng (C√≥ th·ªÉ ch·ªçn theo option v√† ch·ªâ ch·ªçn ƒë∆∞·ª£c 1)'
                        , 'Link n·ªôi b·ªô/ b√°o c√°o' ]; %>

                        <table class="detail-grid">
                            <colgroup>
                                <col />
                                <col />
                            </colgroup>
                            <tbody>
                                <% DETAIL_ROWS.forEach(function(label, idx){ %>
                                    <tr>
                                        <th>
                                            <%= label %>
                                        </th>
                                        <td>
                                            <!-- tr∆∞·ªùng hi·ªÉn th·ªã -->
                                            <div class="rte-field" contenteditable="true"
                                                data-name="detail[<%= label %>]" data-index="<%= idx %>"></div>
                                            <!-- textarea ·∫©n ƒë·ªÉ submit -->
                                            <textarea name="detail[<%= label %>]" hidden></textarea>
                                        </td>
                                    </tr>
                                    <% }); %>
                            </tbody>
                        </table>

                        <script>
                            (function () {
                                let activeField = null;

                                // b·∫Øt focus ƒë·ªÉ bi·∫øt ƒëang ch·ªânh √¥ n√†o
                                document.querySelectorAll('.rte-field').forEach(el => {
                                    el.addEventListener('focus', () => activeField = el);
                                });

                                // toolbar: bold/italic/underline
                                document.getElementById('rteToolbar').addEventListener('click', (e) => {
                                    const btn = e.target.closest('.rte-btn');
                                    if (!btn) return;
                                    const cmd = btn.dataset.cmd;
                                    if (!cmd) return;
                                    document.execCommand(cmd, false, null);
                                });
                                document.getElementById('rteLink').addEventListener('click', () => {
                                    // field ƒëang focus ph·∫£i l√† contenteditable
                                    const el = document.activeElement;
                                    if (!el || el.getAttribute('contenteditable') !== 'true') return;

                                    const url = prompt('Nh·∫≠p URL (c√≥ th·ªÉ link r√∫t g·ªçn):', 'https://');
                                    if (!url) return;

                                    const text = document.getSelection()?.toString() || url;
                                    // ch√®n th·∫ª a, m·ªü tab m·ªõi
                                    const html = `<a href="${url.replace(/"/g, '&quot;')}" target="_blank" rel="noopener noreferrer">${text}</a>`;
                                    document.execCommand('insertHTML', false, html);
                                });
                                // ƒë·ªïi m√†u ch·ªØ
                                document.getElementById('rteColor').addEventListener('input', (e) => {
                                    document.execCommand('foreColor', false, e.target.value);
                                });

                                // emoji ƒë∆°n gi·∫£n
                                document.getElementById('rteEmoji').addEventListener('click', () => {
                                    if (!activeField) return;
                                    const emoji = prompt('Nh·∫≠p emoji / icon:', 'üî•');
                                    if (emoji) document.execCommand('insertText', false, emoji);
                                });

                                // Tr∆∞·ªõc khi submit: copy innerHTML => textarea ·∫©n
                                document.getElementById('promoForm').addEventListener('submit', () => {
                                    document.querySelectorAll('.rte-field').forEach((div) => {
                                        const name = div.getAttribute('data-name');
                                        const ta = div.parentElement.querySelector('textarea[name="' + name + '"]');
                                        ta.value = div.innerHTML;  // l∆∞u HTML
                                    });
                                });
                            })();
                        </script>




                        <h3>üéØ Ph·∫°m vi √°p d·ª•ng</h3>

                        <div class="form-group">
                            <label>√Åp d·ª•ng cho</label>
                            <select name="apply_to" onchange="toggleApplyTo()">
                                <option value="all">T·∫•t c·∫£ s·∫£n ph·∫©m</option>
                                <option value="sku">Theo danh s√°ch SKU ch·ªâ ƒë·ªãnh</option>
                            </select>
                        </div>

                        <!-- INCLUDE: ch·ªâ hi·ªán khi ch·ªçn Theo list SKU -->
                        <div class="form-group" id="skuIncludeField" style="display:none;">
                            <label>SKU √°p d·ª•ng (ph√¢n c√°ch b·∫±ng d·∫•u ph·∫©y, xu·ªëng d√≤ng ƒë·ªÅu ƒë∆∞·ª£c)</label>
                            <textarea name="skus" placeholder="VD: SKU0001, SKU0002, SKU0003"></textarea>
                        </div>

                        <!-- EXCLUDE: d√πng cho c·∫£ 2 ch·∫ø ƒë·ªô (All ho·∫∑c Theo list SKU) -->
                        <div class="form-group">
                            <label>SKU lo·∫°i tr·ª´ (t√πy ch·ªçn)</label>
                            <textarea name="excluded_skus" placeholder="VD: SKU0101, SKU0102"></textarea>
                        </div>

                       <div class="form-section">
  <h3 class="section-title">Quan h·ªá v·ªõi CTKM kh√°c</h3>

  <% // Group theo group_name
     const grouped = {};
     (allPromosForCompat || []).forEach(p=>{
       const g = p.group_name || 'Kh√°c';
       (grouped[g] = grouped[g] || []).push(p);
     });
     const groupNames = Object.keys(grouped).sort((a,b)=> a.localeCompare(b,'vi'));
  %>

  <div class="form-group">
    <label>√Åp d·ª•ng c√πng CTKM</label>

    <!-- B·ªô ch·ªçn nh√≥m + n√∫t ch·ªçn nhanh -->
    <div class="inline-actions" style="display:flex; gap:8px; margin-bottom:6px;">
      <select id="applyWithGroupPicker" style="padding:8px 10px; border:1px solid #e5e7eb; border-radius:8px;">
        <% groupNames.forEach(g => { %>
          <option value="<%= g %>"><%= g %></option>
        <% }) %>
      </select>
      <button type="button" class="btn" id="btnSelectGroupAW">Ch·ªçn nh√≥m</button>
      <button type="button" class="btn btn-secondary" id="btnUnselectGroupAW">B·ªè ch·ªçn</button>
    </div>

    <select name="apply_with[]" multiple class="multi-select" id="applyWithSelect" style="min-height: 180px;">
      <% groupNames.forEach(g => { %>
        <optgroup label="<%= g %>">
          <% grouped[g].forEach(function(p){
               var label = p.group_name ? (p.group_name + ' ‚Äî ' + (p.subgroup_name || p.name)) : p.name; %>
            <option data-group="<%= g %>" value="<%= p.id %>" <%= (compatAllowIds||[]).includes(String(p.id)) ? 'selected' : '' %>><%= label %></option>
          <% }) %>
        </optgroup>
      <% }) %>
    </select>
    <div class="hint">Gi·ªØ Ctrl/Command ƒë·ªÉ ch·ªçn th√™m CTKM; ho·∫∑c d√πng ‚ÄúCh·ªçn nh√≥m‚Äù.</div>
  </div>

  <div class="form-group">
    <label>Kh√¥ng √°p d·ª•ng c√πng CTKM</label>

    <div class="inline-actions" style="display:flex; gap:8px; margin-bottom:6px;">
      <select id="excludeWithGroupPicker" style="padding:8px 10px; border:1px solid #e5e7eb; border-radius:8px;">
        <% groupNames.forEach(g => { %>
          <option value="<%= g %>"><%= g %></option>
        <% }) %>
      </select>
      <button type="button" class="btn" id="btnSelectGroupEX">Ch·ªçn nh√≥m</button>
      <button type="button" class="btn btn-secondary" id="btnUnselectGroupEX">B·ªè ch·ªçn</button>
    </div>

    <!-- L∆ØU √ù: ƒë·ªïi name th√†nh exclude_with[] ƒë·ªÉ submit nhi·ªÅu gi√° tr·ªã -->
    <select name="exclude_with[]" multiple class="multi-select" id="excludeWithSelect" style="min-height: 180px;">
      <% groupNames.forEach(g => { %>
        <optgroup label="<%= g %>">
          <% grouped[g].forEach(function(p){
               var label = p.group_name ? (p.group_name + ' ‚Äî ' + (p.subgroup_name || p.name)) : p.name; %>
            <option data-group="<%= g %>" value="<%= p.id %>" <%= (compatExclIds||[]).includes(String(p.id)) ? 'selected' : '' %>><%= label %></option>
          <% }) %>
        </optgroup>
      <% }) %>
    </select>
  </div>
</div>

<script>
  // Helpers ch·ªçn/b·ªè theo nh√≥m cho 2 select
  function selectByGroup(selectEl, group, on=true){
    [...selectEl.options].forEach(o=>{
      if(o.dataset.group === group){ o.selected = !!on; }
    });
  }
  document.getElementById('btnSelectGroupAW').onclick = () =>
    selectByGroup(document.getElementById('applyWithSelect'),
                  document.getElementById('applyWithGroupPicker').value, true);
  document.getElementById('btnUnselectGroupAW').onclick = () =>
    selectByGroup(document.getElementById('applyWithSelect'),
                  document.getElementById('applyWithGroupPicker').value, false);

  document.getElementById('btnSelectGroupEX').onclick = () =>
    selectByGroup(document.getElementById('excludeWithSelect'),
                  document.getElementById('excludeWithGroupPicker').value, true);
  document.getElementById('btnUnselectGroupEX').onclick = () =>
    selectByGroup(document.getElementById('excludeWithSelect'),
                  document.getElementById('excludeWithGroupPicker').value, false);
</script>


                        <script>
                            function toggleApplyTo() {
                                const v = document.querySelector('select[name="apply_to"]').value;
                                document.getElementById('skuIncludeField').style.display = (v === 'sku') ? 'block' : 'none';
                            }
                            // khi m·ªü modal
                            function showCreateModal() {
                                document.getElementById('createPromoModal').style.display = 'block';
                                document.getElementById('promoForm').reset();
                                toggleApplyTo();
                            }
                            function closeModal() {
                                document.getElementById('createPromoModal').style.display = 'none';
                                document.body.classList.remove('modal-open');
                            }
                        </script>


                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">‚úÖ T·∫°o CTKM</button>
                            <button type="button" class="btn btn-secondary" onclick="closeModal()">‚ùå H·ªßy</button>
                        </div>
                </form>
            </div>
        </div>

        <script>
            // JavaScript ƒë·ªÉ x·ª≠ l√Ω modal v√† form
            function showCreateModal() {
                document.getElementById('createPromoModal').style.display = 'block';
            }

            function closeModal() {
                document.getElementById('createPromoModal').style.display = 'none';
            }

function togglePromoFields() {
  const promoType = document.querySelector('select[name="promo_type"]').value;
  const typesWithCode = new Set(['Coupon','Voucher','∆Øu ƒë√£i thanh to√°n','Gift']);
  document.getElementById('couponField').style.display = typesWithCode.has(promoType) ? 'block' : 'none';
}
document.addEventListener('DOMContentLoaded', () => {
  const typeEl = document.querySelector('select[name="promo_type"]');
  if (typeEl) { togglePromoFields(); typeEl.addEventListener('change', togglePromoFields); }
});
            function toggleApplyTo() {
                const applyTo = document.querySelector('select[name="apply_to"]').value;
                document.getElementById('skuIncludeField').style.display = applyTo === 'sku' ? 'block' : 'none';
                document.getElementById('skuExcludeField').style.display = applyTo === 'all' ? 'block' : 'none';
            }

            function toggleSpecialRules() {
                const isSpecial = document.querySelector('input[name="is_special"]').checked;
                document.getElementById('specialRules').style.display = isSpecial ? 'block' : 'none';
            }

            function addRule() {
                const container = document.getElementById('specialRulesContainer');
                const newRule = document.createElement('div');
                newRule.className = 'dynamic-item';
                newRule.innerHTML = `
            <input type="text" placeholder="Brand" name="special_brand[]">
            <input type="text" placeholder="Subcat" name="special_subcat[]">
            <input type="number" placeholder="M·ª©c gi·∫£m" name="special_discount[]">
            <button type="button" class="remove-item" onclick="removeRule(this)">X√≥a</button>
        `;
                container.appendChild(newRule);
            }

            function removeRule(button) {
                button.parentElement.remove();
            }

            function editPromo(id) {
                window.location.href = `/edit-promotion/${id}`;
            }
            // T√¨m ki·∫øm CTKM
            document.getElementById('promoSearch').addEventListener('input', function (e) {
                const searchTerm = e.target.value.toLowerCase();
                const promoCards = document.querySelectorAll('.promo-card');

                promoCards.forEach(card => {
                    const promoName = card.getAttribute('data-name');
                    if (promoName.includes(searchTerm)) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
            // X·ª≠ l√Ω submit form - FIXED VERSION
            document.getElementById('promoForm').addEventListener('submit', async function (e) {
                e.preventDefault();
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalText = submitBtn.textContent;
                submitBtn.disabled = true; submitBtn.textContent = 'üîÑ ƒêang t·∫°o...';

                try {
                    const form = this;
                    const fd = new FormData(form);
                    // Chuy·ªÉn t·∫•t c·∫£ field th∆∞·ªùng sang object
                    const data = {};
                    for (const [k, v] of fd.entries()) {
                        if (data[k] !== undefined) {
                            if (!Array.isArray(data[k])) data[k] = [data[k]];
                            data[k].push(v);
                        } else {
                            data[k] = v;
                        }
                    }
                    // B·∫ÆT BU·ªòC: √©p 2 select multiple th√†nh m·∫£ng id
                    const applyWithSel = form.querySelector('#applyWithSelect');
                    const excludeWithSel = form.querySelector('#excludeWithSelect');
                    data.apply_with = applyWithSel ? Array.from(applyWithSel.selectedOptions).map(o => o.value) : [];
                    data.exclude_with = excludeWithSel ? Array.from(excludeWithSel.selectedOptions).map(o => o.value) : [];

                    // lo·∫°i tr√πng, lo·∫°i self n·∫øu c√≥
                    const idSelf = data.id || null;
                    const setAllow = new Set(data.apply_with);
                    const setDeny = new Set(data.exclude_with);

                    if (idSelf) { setAllow.delete(String(idSelf)); setDeny.delete(String(idSelf)); }

                    // n·∫øu 1 id n·∫±m ·ªü c·∫£ 2 list ‚Üí ∆∞u ti√™n "kh√¥ng √°p d·ª•ng c√πng"
                    for (const id of setAllow) { if (setDeny.has(id)) setAllow.delete(id); }

                    data.apply_with = Array.from(setAllow);
                    data.exclude_with = Array.from(setDeny);




                    const res = await fetch('/create-promotion', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    const result = await res.json();
                    if (result.success) {
                        alert('‚úÖ T·∫°o CTKM th√†nh c√¥ng!');
                        closeModal();
                        location.reload();
                    } else {
                        alert('‚ùå ' + (result.error || 'L·ªói kh√¥ng x√°c ƒë·ªãnh'));
                    }
                } catch (err) {
                    alert('‚ùå ' + err.message);
                } finally {
                    submitBtn.disabled = false; submitBtn.textContent = originalText;
                }
            });

            // ƒê·∫£m b·∫£o modal hi·ªÉn th·ªã ƒë√∫ng
            function showCreateModal() {
                document.getElementById('createPromoModal').style.display = 'block';
                const form = document.getElementById('promoForm');
                form.reset();
                toggleApplyTo();
            }

            // Debug: Ki·ªÉm tra xem h√†m c√≥ ƒë∆∞·ª£c g·ªçi kh√¥ng
            document.querySelector('.btn.btn-primary').addEventListener('click', function () {
                console.log('Create button clicked');
                showCreateModal();
            });

            // Th√™m event listener ƒë·ªÉ debug
            document.addEventListener('DOMContentLoaded', function () {
                console.log('DOM loaded');

                const createBtn = document.querySelector('.btn.btn-primary');
                if (createBtn) {
                    createBtn.addEventListener('click', showCreateModal);
                    console.log('Create button event listener added');
                }
            });
            // H√†m refresh danh s√°ch CTKM
            async function refreshPromoList() {
                try {
                    console.log('Refreshing promotion list...');

                    const response = await fetch('/api/promotions');
                    const result = await response.json();

                    if (result.success) {
                        const promoList = document.querySelector('.promo-list');
                        promoList.innerHTML = '';

                        if (result.promotions && result.promotions.length > 0) {
                            result.promotions.forEach(promo => {
                                const promoCard = createPromoCard(promo);
                                promoList.appendChild(promoCard);
                            });
                            console.log('Promotions loaded:', result.promotions.length);
                        } else {
                            promoList.innerHTML = `
                    <div class="no-data">
                        <p>üì≠ Ch∆∞a c√≥ CTKM n√†o ƒë∆∞·ª£c t·∫°o</p>
                        <p>H√£y b·∫•m "T·∫°o CTKM m·ªõi" ƒë·ªÉ b·∫Øt ƒë·∫ßu</p>
                    </div>
                `;
                        }
                    } else {
                        console.error('Refresh failed:', result.error);
                    }
                } catch (error) {
                    console.error('Refresh error:', error);
                }
            }
            // Ki·ªÉm tra k·∫øt n·ªëi API
            async function testConnection() {
                try {
                    const response = await fetch('/api/promotions');
                    console.log('API connection test:', response.status);
                } catch (error) {
                    console.error('API connection failed:', error);
                }
            }

            // Ch·∫°y ki·ªÉm tra khi trang load
            testConnection();

            // X√≥a CTKM (ch·ªâ manager)
            function deletePromo(id) {
                if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a CTKM n√†y?')) {
                    fetch(`/api/promotions/${id}`, {
                        method: 'DELETE'
                    })
                        .then(response => response.json())
                        .then(result => {
                            if (result.success) {
                                alert('‚úÖ X√≥a CTKM th√†nh c√¥ng!');
                                location.reload();
                            } else {
                                alert('‚ùå L·ªói: ' + result.error);
                            }
                        })
                        .catch(error => {
                            alert('‚ùå L·ªói k·∫øt n·ªëi: ' + error.message);
                        });
                }
            }

        </script>
        <script>
            (function () {
                const modal = document.getElementById('createPromoModal');

                // 1) Kh√¥ng cho ESC/Backspace/Delete ƒë√≥ng modal khi ƒëang nh·∫≠p trong c√°c √¥ nh·∫≠p
                modal.addEventListener('keydown', function (e) {
                    const isEditing =
                        e.target.matches('input, textarea, select, [contenteditable="true"]');

                    // N·∫øu ƒëang nh·∫≠p trong field => ch·∫∑n c√°c ph√≠m g√¢y ƒë√≥ng modal / back
                    if (isEditing && (e.key === 'Backspace' || e.key === 'Delete' || e.key === 'Escape')) {
                        e.stopPropagation();
                        // V·ªõi Escape trong field, tr√°nh ƒë√≥ng modal
                        if (e.key === 'Escape') e.preventDefault();
                    }
                });

                // 2) Ph√≤ng tr∆∞·ªùng h·ª£p c√≥ global handler tr√™n window
                window.addEventListener('keydown', function (e) {
                    const insideModal = document.activeElement && document.activeElement.closest('#createPromoModal');
                    if (insideModal && (e.key === 'Backspace' || e.key === 'Delete')) {
                        // ƒêang nh·∫≠p trong modal -> kh√¥ng cho bubble l√™n global
                        e.stopPropagation();
                    }
                });

                // 3) ƒê·∫£m b·∫£o √¥ SKU l√† textarea/text (kh√¥ng ph·∫£i type="number")
                //    ƒë·ªÉ Backspace/Delete ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng.
                const skuInclude = document.querySelector('textarea[name="skus"]');
                const skuExclude = document.querySelector('textarea[name="excluded_skus"]');
                [skuInclude, skuExclude].forEach(el => {
                    if (el) {
                        el.setAttribute('inputmode', 'text');
                        el.setAttribute('autocomplete', 'off');
                        el.setAttribute('spellcheck', 'false');
                    }
                });
            })();
        </script>
        <script>
            (function () {
                const legacy = document.getElementById('promoSearch');
                const form = document.getElementById('filterForm');
                const qHidden = document.getElementById('qHidden');
                if (!legacy || !form || !qHidden) return;

                // G√µ -> debounce submit, Enter -> submit ngay
                let t;
                function submitDebounced() { clearTimeout(t); t = setTimeout(() => form.submit(), 350); }

                legacy.addEventListener('input', () => { qHidden.value = legacy.value; submitDebounced(); });
                legacy.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter') { e.preventDefault(); qHidden.value = legacy.value; form.submit(); }
                });

                // (Tu·ª≥ ch·ªçn) l·ªçc t·ª©c th√¨ tr√™n DOM cho tr·∫£i nghi·ªám m∆∞·ª£t
                const cards = document.querySelectorAll('.promo-card');
                legacy.addEventListener('input', () => {
                    const v = (legacy.value || '').trim().toLowerCase();
                    cards.forEach(c => {
                        const name = (c.getAttribute('data-name') || '').toLowerCase();
                        c.style.display = name.includes(v) ? '' : 'none';
                    });
                });
            })();
        </script>
        <script>
            (function () {
                const legacy = document.getElementById('promoSearch');
                const toggle = document.querySelector('.filter-toggle');
                const pop = document.getElementById('filterForm');
                const qHidden = document.getElementById('qHidden');

                if (!legacy || !toggle || !pop || !qHidden) return;

                // Proxy q t·ª´ √¥ search -> form filter (server-side)
                let t;
                function debounce(fn, ms) { clearTimeout(t); t = setTimeout(fn, ms); }
                legacy.addEventListener('input', () => {
                    qHidden.value = legacy.value;
                    // (tu·ª≥ ch·ªçn) l·ªçc DOM t·ª©c th√¨ ƒë·ªÉ c·∫£m gi√°c m∆∞·ª£t
                    const v = (legacy.value || '').trim().toLowerCase();
                    document.querySelectorAll('.promo-card').forEach(c => {
                        const name = (c.getAttribute('data-name') || '').toLowerCase();
                        c.style.display = name.includes(v) ? '' : 'none';
                    });
                    // g·ª≠i server-side sau 350ms
                    debounce(() => pop.submit(), 350);
                });
                legacy.addEventListener('keydown', (e) => {
                    if (e.key === 'Enter') { e.preventDefault(); qHidden.value = legacy.value; pop.submit(); }
                });

                // Toggle popover
                toggle.addEventListener('click', () => {
                    const open = pop.classList.toggle('show');
                    toggle.setAttribute('aria-expanded', open);
                    pop.setAttribute('aria-hidden', !open);
                });
                // Click ngo√†i th√¨ ƒë√≥ng
                document.addEventListener('click', (e) => {
                    if (!pop.classList.contains('show')) return;
                    const inside = e.target.closest('.filter-popover') || e.target.closest('.filter-toggle');
                    if (!inside) { pop.classList.remove('show'); toggle.setAttribute('aria-expanded', 'false'); pop.setAttribute('aria-hidden', 'true'); }
                });
                // ESC ƒë√≥ng popover
                document.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape' && pop.classList.contains('show')) {
                        pop.classList.remove('show'); toggle.setAttribute('aria-expanded', 'false'); pop.setAttribute('aria-hidden', 'true');
                    }
                });
            })();
        </script>
        <script>
            // Khi ng∆∞·ªùi d√πng nh·∫≠p T√™n CTKM -> set subgroup_name = name
            (function () {
                const nameInput = document.querySelector('input[name="name"]');
                const subHidden = document.getElementById('subgroup_name_hidden');
                if (nameInput && subHidden) {
                    const sync = () => subHidden.value = nameInput.value || '';
                    nameInput.addEventListener('input', sync);
                    sync();
                }
            })();
        </script>

        <div id="toast" class="toast">ƒê√£ copy m√£!</div>
<script>
  async function copyCode(el) {
    const code = el.dataset.code || el.textContent.trim();
    try {
      await navigator.clipboard.writeText(code);
      const t = document.getElementById('toast');
      if (t) { t.style.display = 'block'; setTimeout(()=> t.style.display='none', 1200); }
    } catch (e) {
      const r = document.createRange(); r.selectNodeContents(el);
      const sel = window.getSelection(); sel.removeAllRanges(); sel.addRange(r);
      document.execCommand('copy'); sel.removeAllRanges();
      alert('ƒê√£ copy m√£!');
    }
  }
</script>

        <%- include('partials/footer') %>